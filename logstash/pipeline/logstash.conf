input {
	beats {
		port => 5000
	}
}

## Add your filters / logstash plugins configuration here

filter {
     mutate {
	remove_field => [ "host" ]
    }
    if [fields][type] == "smb-audit" {
	mutate {
	    gsub => ["message","[\\|]",":"]
	    gsub => ["message","  "," "]
	}
	grok {
	    match => [ "message" , "%{MONTH:syslog.month} %{MONTHDAY:syslog.day} %{TIME:syslog.time} %{HOSTNAME:server.name} smbd_audit: INTERTRANSL/%{GREEDYDATA:user.name}:%{IP:user.ip}:%{WORD:share.name}:%{HOSTNAME:host.name}:%{WORD:action}:%{DATA:sucess}:%{GREEDYDATA:path}"]
	    overwrite => [ "message" ]
	}
#	if [host][name] == "192.168.1.50" {
#	    dns {
#		reverse => ["host.name"]
#		action => "replace"
#		hit_cache_size => 8000
#		hit_cache_ttl => 300
#		failed_cache_size => 1000
#		failed_cache_ttl => 10
#		nameserver [192.168.1.16,
#	    }
#	    mutate {
#		add_field => [ "host.architecture", "%{host.name}" ]
#	    }
#	}
    }
    else if [fields][type] == "system" {
	grok {
#	    match => [ "message", "%{SYSLOGLINE}" ]
	    match => { "message" => "%{SYSLOGTIMESTAMP:log.timestamp} %{SYSLOGHOST:host.hostname} %{DATA:process.name}(?:\[%{POSINT:process.pid:long}\])?: %{GREEDYDATA:message}" }
	}
	mutate {
	    add_field => [ "host.architecture", "%{[beat][hostname]}" ]
#	    add_field => [ "received_at", "%{@timestamp}" ]
	}
	
#    	date {
#	    match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
#    	}
    }
}

output {
    if [fields][type] == "smb-audit" {
	elasticsearch {
		hosts => "elasticsearch:9200"
		user => "elastic"
		password => changeme
		index => "smb-audit-%{+YYYY.MM}"
		}
    }
    else if [fields][type] == "system"{
	elasticsearch {
		hosts => "elasticsearch:9200"
		user => "elastic"
		password => changeme
		index => "system_log-%{+YYYY.MM}"
#		index => "filebeat-7.2.0-2019.07.15-000001"
		}
	}
    else {
	elasticsearch {
		hosts => "elasticsearch:9200"
		user => "elastic"
		password => changeme
#		index => "filebeat-7.2.0-2019.07.15-000001"
		index => "temp_log-%{+YYYY.MM}"
		}
    }
#stdout { codec => rubydebug }
}